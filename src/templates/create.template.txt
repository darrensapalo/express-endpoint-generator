
import express from "express";

import {pipe} from "rxjs";

import <MODEL_NAME> from '@models/<MODEL_NAME>';

import ServiceEndpoint from "@design/service-endpoint";
import {
    JsonRequestBodyIsRequired,
    ValidResourceRequest
} from "@design/validators";
import {mergeMap } from "rxjs/operators";
import {createForModel } from "@design/model-operators";
import {CreateResource } from "@design/mappers";
import {CreateResourceRequest } from "@interfaces/request";
import {
    GenerateSuccessfulServerResponse,
    SuccessfulCreateMessage
} from '@design/processors';

/**
 * API route that creates a new instance of <MODEL_NAME>.
 *
 * This endpoint was automatically generated on <TIMESTAMP>
 * using the `node-express-endpoint-generator` package.
 * 
 * @param request The HTTP request
 * @param response The HTTP response
 */
export default function create<MODEL_NAME>(request: express.Request, response: express.Response) {

    const endpoint = new ServiceEndpoint<CreateResourceRequest>("Create <MODEL_NAME> instance");

    endpoint.Validators = [ ValidResourceRequest(<MODEL_NAME>), JsonRequestBodyIsRequired ];

    endpoint.RequestMapper = CreateResource(<MODEL_NAME>);

    endpoint.Processor = pipe(
        mergeMap(createForModel<<MODEL_NAME>>(<MODEL_NAME>)),
        GenerateSuccessfulServerResponse(
            SuccessfulCreateMessage("<MODEL_NAME>", <MODEL_NAME>),
            { shouldLogProcess: true })
    );

    endpoint.perform(request, response);
}
